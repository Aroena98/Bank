using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System.IO.Ports;
using UnityEngine.SceneManagement;

public class keuzemenu : MonoBehaviour
{
    public int voldoendeSaldo; //nummer van het volgende scherm bij voldoende saldo (public zodat dit in de editor gemakkelijk gewijzigd kan worden)
    public int onvoldoendeSaldo; //nummer van het volgende scherm bij onvoldoende saldo (public zodat dit in de editor gemakkelijk gewijzigd kan worden)
    public int saldoScreen; //nummer van het saldo scherm (public zodat dit in de editor gemakkelijk gewijzigd kan worden)
    public int opnemenScreen; //nummer van het opnemen scherm (public zodat dit in de editor gemakkelijk gewijzigd kan worden)
    public int helpScreen; //nummer van het help scherm (public zodat dit in de editor gemakkelijk gewijzigd kan worden)
    private int beginScreen = 0; //nummer van het scherm "voer uw kaart in" 
    private int saldo; //het saldo van de rekeninghouder
    private int data; //data die ontvangen wordt van de Arduino
    SerialPort sp = new SerialPort(globalHandler.getSerialPort(), 9600); //stel de serial communicatie in
    
    void Start()
    {
        sp.Open(); //begin de serial communicatie
        sp.ReadTimeout = 1000; //een timeout om fouten te voorkomen
    }

    void Update()
    {

        if (sp.IsOpen) //wanneer de serial communicatie beschikbaar is
        {
            try
            {

                sp.Write ("2"); //deze code maakt duidelijk aan de Arduino welke functie hij aan moet roepen
                data = sp.ReadByte(); //ontvang data van de Arduino 
                
                if (data == 17) //gebruiker drukt op a
                {
                    SceneManager.LoadScene(saldoScreen); //laad het saldo checken menu
                }

                if (data == 18) //gebruiker drukt op b
                {
                    SceneManager.LoadScene(opnemenScreen); //laad het opnemen menu
                }

                if (data == 19) //gebruiker drukt op c
                {
                    saldo = globalHandler.getSaldo(); //check het huidige saldo van de rekeninghouder

                    if (50 <= saldo){ //wanneer het saldo hoger of gelijk is aan de op te nemen 50
                        globalHandler.setTransactionAmmount(50); //sla op hoeveel de rekeninghouder op wil nemen
                        SceneManager.LoadScene(voldoendeSaldo); //laad het volgende scherm 
                    } 
                    else {
                        SceneManager.LoadScene(onvoldoendeSaldo); //laad het volgende scherm met de melding "onvoldoende saldo"
                    }
                }

                if (data == 20) //gebruiker drukt op d
                {
                    SceneManager.LoadScene(helpScreen); //laad het help menu
                }

                if (data == 243) //gebruiker drukt op #
                {
                    SceneManager.LoadScene(beginScreen); //ga helemaal terug naar kaart invoeren
                }
               
            }
            catch (System.Exception){} //doe niks wanneer het voorgaande stuk code niet werkte
        }
    }
    
}
